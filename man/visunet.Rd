% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visunet.R
\name{visunet}
\alias{visunet}
\title{visunet}
\usage{
visunet(rules, type = "RDF", NodeColorType = "DL",
  CustObjectNodes = list(), CustObjectEdges = list())
}
\arguments{
\item{rules}{data frame with rules information. Required at least four columns: "features",
"accuracyRHS", "supportRHS" and "decision" and each row corresponds to one rule.\cr
See the output of \code{\link[R.ROSETTA]{rosetta}} for the information about the rules data frame structure.
#'}

\item{type}{character string specifying the type of the input data.  Three types implemented
are "RDF" - the R.ROSETTA output (see \code{\link[R.ROSETTA]{rosetta}}), "L" - "Line by line" file format (see \code{\link[R.ROSETTA]{saveLineByLine}})
The default is "RDF".}

\item{NodeColorType}{character string specifying the color of nodes.
\itemize{
  \item "DL" - feature discretization levels
  \item "A" - feature distratization value
}
The default is "DL".}

\item{CustObjectNodes}{a list that contains customised VisuNet output for nodes. List need
to contain two variables:
\itemize{
  \item nodes - customized VisuNet output for nodes
  \item CustCol - names of variables added/changed in the VisuNet output for nodes.
  See \code{\link[visNetwork]{visNodes}} for the full list of available variables.
}
Example use in the example section}

\item{CustObjectEdges}{a list that contains customised VisuNet output for edges. List need
to contain two variables:
\itemize{
  \item edges - customized VisuNet output for nodes
  \item CustCol - names of variables added/changed in the VisuNet output for nodes.
  See \code{\link[visNetwork]{visEdges}} for the full list of available variables.
}
Example use in the example section}
}
\value{
Rule Network Object.
}
\description{
visunet
}
\examples{

#R.ROSETTA output
out = rosetta(autcon)
rules = out$main
vis_out = visunet(rules)
------------
#"Line by line" file format
rules = (read.csv2('LbL.txt', sep='\\t', header = FALSE, col.names = c('features', 'decision', 'accuracyRHS', 'supportRHS'),stringsAsFactors=FALSE))
rules$accuracyRHS = as.numeric(rules$accuracyRHS)
rules$supportRHS = as.numeric(rules$supportRHS)
rules$pValue = 0.05
vis_out = visunet(rules, 'L')

------------
#customisation of the VisuNet output for nodes
nodes_RNO <- vis_out$all$nodes
#Changing the nodes shape to stars
nodes_RNO$shape <- rep('star', length(nodes_RNO$label))
# a customized nodes list
nodesL <- list(nodes = nodes_RNO,CustCol =  c('shape'))
# Rerun VisuNet with a customized nodes list
vis_out2 <- visunet(rules, CustObjectNodes = nodesL)

------------
customisation of VisuNet output for edges
Adding arrows to edges
edges_RNO <- vis_out$all$edges
edges_RNO$arrows <- rep('to', length(edges_RNO$label2))
# a customized edges list
edgesL <- list(edges = edges_RNO,CustCol =   c('arrows'))
# Rerun VisuNet with a customized edges list
vis_out3 <- visunet(rules, CustObjectEdges = edgesL)
}
\keyword{misc}
